import { requestAPI, typeify } from "./utils.js";

export class SearchResult {
    kind;
    etag;
    id;
    snippet;

    /**
     * 
     * @param {{videoRenderer?:{videoId:string,thumbnail:{thumbnails:{url:string,width:number,height:number}[]},title:{runs:{text:string}[],accessibility:{accessibilityData:{label:string}}},longBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},publishedTimeText:{simpleText:string},lengthText:{accessibility:{accessibilityData:{label:string}},simpleText:string},viewCountText:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,params:string,playerParams:string,watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},badges:{metadataBadgeRenderer:{style:string,label:string,trackingParams:string,accessibilityData:{label:string}}}[],ownerBadges:{metadataBadgeRenderer:{icon:{iconType:string},style:string,tooltip:string,trackingParams:string,accessibilityData:{label:string}}}[],ownerText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},shortBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},trackingParams:string,showActionMenu:boolean,shortViewCountText:{accessibility:{accessibilityData:{label:string}},simpleText:string},menu:{menuRenderer:{items:{menuServiceItemRenderer:{text:{runs:{text:string}[]},icon:{iconType:string},serviceEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,addToPlaylistCommand:{openMiniplayer:boolean,videoId:string,listType:string,onCreateListCommand:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean,apiUrl:string}},createPlaylistServiceEndpoint:{videoIds:string[],params:string}},videoIds:string[]}}[]}},trackingParams:string}}[],trackingParams:string,accessibility:{accessibilityData:{label:string}}}},channelThumbnailSupportedRenderers:{channelThumbnailWithLinkRenderer:{thumbnail:{thumbnails:{url:string,width:number,height:number}[]},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string}},accessibility:{accessibilityData:{label:string}}}},thumbnailOverlays:{thumbnailOverlayTimeStatusRenderer:{text:{accessibility:{accessibilityData:{label:string}},simpleText:string},style:string}}[],richThumbnail:{movingThumbnailRenderer:{movingThumbnailDetails:{thumbnails:{url:string,width:number,height:number}[],logAsMovingThumbnail:boolean},enableHoveredLogging:boolean,enableOverlay:boolean}},detailedMetadataSnippets:{snippetText:{runs:{text:string}[]},snippetHoverText:{runs:{text:string}[]},maxOneLine:boolean}[],inlinePlaybackEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,params:string,playerParams:string,playerExtraUrlParams:{key:string,value:string}[],watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},searchVideoResultEntityKey:string},channelRenderer?:{channelId:string,title:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}},thumbnail:{thumbnails:{url:string,width:number,height:number}[]},shortBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},videoCountText:{accessibility:{accessibilityData:{label:string}},simpleText:string},subscriptionButton:{subscribed:boolean},ownerBadges:{metadataBadgeRenderer:{icon:{iconType:string},style:string,tooltip:string,trackingParams:string,accessibilityData:{label:string}}}[],subscriberCountText:{simpleText:string},subscribeButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,text:{runs:{text:string}[]},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},signInEndpoint:{nextEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},searchEndpoint:{query:string}},continueAction:string}},trackingParams:string}},trackingParams:string,longBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]}},playlistRenderer?:{playlistId:string,title:{simpleText:string},thumbnails:{thumbnails:{url:string,width:number,height:number}[]}[],videoCount:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,playlistId:string,params:string,loggingContext:{vssLoggingContext:{serializedContextData:string}},watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},viewPlaylistText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string}}}[]},shortBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},videos:{childVideoRenderer:{title:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,playlistId:string,loggingContext:{vssLoggingContext:{serializedContextData:string}},watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},lengthText:{accessibility:{accessibilityData:{label:string}},simpleText:string},videoId:string}}[],videoCountText:{runs:{text:string}[]},trackingParams:string,thumbnailText:{runs:{text:string,bold:boolean}[]},longBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},thumbnailRenderer:{playlistVideoThumbnailRenderer:{thumbnail:{thumbnails:{url:string,width:number,height:number}[],sampledThumbnailColor:{red:number,green:number,blue:number},darkColorPalette:{section2Color:number,iconInactiveColor:number},vibrantColorPalette:{iconInactiveColor:number}},trackingParams:string}},thumbnailOverlays:{thumbnailOverlayBottomPanelRenderer:{text:{simpleText:string},icon:{iconType:string}}}[]}}} response 
     */
    constructor(response, etag) {
        this.kind = "youtube#searchResult";
        this.etag = etag;
        if (response.videoRenderer) {
            // YouTube Video
            const data = response.videoRenderer;
            this.id = {
                kind: "youtube#video",
                videoId: data.videoId
            };
            this.snippet = {
                publishedAt: undefined,
                channelId: data.ownerText.runs[0].navigationEndpoint.browseEndpoint.browseId,
                title: data.title.runs[0].text,
                description: ((runs) => {
                    let description = "";
                    runs.forEach((value) => { description += value.text });
                    return description;
                })(data.detailedMetadataSnippets[0].snippetText.runs),
                thumbnails: {
                    default: data.thumbnail.thumbnails[data.thumbnail.thumbnails.length - 1]
                },
                channelTitle: data.ownerText.runs[0].text,
                liveBroadcastContent: ((badges) => {
                    if (!badges) {
                        return "none";
                    }
                    for (const badge of badges) {
                        if (badge.metadataBadgeRenderer.label == "LIVE") {
                            return "live";
                        }
                    }
                    return "none";
                })(data.badges)
            }
        } else if (response.channelRenderer) {
            // YouTube Channel
            const data = response.channelRenderer;
            this.id = {
                kind: "youtube#channel",
                channelId: data.channelId
            };
            this.snippet = {
                publishedAt: undefined,
                channelId: data.channelId,
                title: data.title.simpleText,
                description: undefined,
                thumbnails: {
                    default: `https:${data.thumbnail.thumbnails[data.thumbnail.thumbnails.length - 1]}`
                },
                channelTitle: data.title.simpleText,
                liveBroadcastContent: undefined
            }
        } else {
            // YouTube Playlist
            const data = response.playlistRenderer;
            this.id = {
                kind: "youtube#playlist",
                playlistId: data.playlistId
            };
            this.snippet = {
                publishedAt: undefined,
                channelId: data.longBylineText.runs[0].navigationEndpoint.browseEndpoint.browseId,
                title: response.playlistRenderer.title.simpleText,
                description: undefined,
                thumbnails: {
                    default: data.thumbnails[0].thumbnails[data.thumbnails[0].thumbnails.length - 1]
                },
                channelTitle: data.longBylineText.runs[0].text,
                liveBroadcastContent: undefined
            }
        }
    }

}

export class SearchListResponse {
    kind;
    etag;
    nextPageToken;
    prevPageToken;
    regionCode;
    pageInfo;
    items;

    /**
     * @param {{statusCode:number,statusMessage:string,headers:{accept?:string|undefined,"accept-language"?:string|undefined,"accept-patch"?:string|undefined,"accept-ranges"?:string|undefined,"access-control-allow-credentials"?:string|undefined,"access-control-allow-headers"?:string|undefined,"access-control-allow-methods"?:string|undefined,"access-control-allow-origin"?:string|undefined,"access-control-expose-headers"?:string|undefined,"access-control-max-age"?:string|undefined,"access-control-request-headers"?:string|undefined,"access-control-request-method"?:string|undefined,age?:string|undefined,allow?:string|undefined,"alt-svc"?:string|undefined,authorization?:string|undefined,"cache-control"?:string|undefined,connection?:string|undefined,"content-disposition"?:string|undefined,"content-encoding"?:string|undefined,"content-language"?:string|undefined,"content-length"?:string|undefined,"content-location"?:string|undefined,"content-range"?:string|undefined,"content-type"?:string|undefined,cookie?:string|undefined,date?:string|undefined,etag?:string|undefined,expect?:string|undefined,expires?:string|undefined,forwarded?:string|undefined,from?:string|undefined,host?:string|undefined,"if-match"?:string|undefined,"if-modified-since"?:string|undefined,"if-none-match"?:string|undefined,"if-unmodified-since"?:string|undefined,"last-modified"?:string|undefined,location?:string|undefined,origin?:string|undefined,pragma?:string|undefined,"proxy-authenticate"?:string|undefined,"proxy-authorization"?:string|undefined,"public-key-pins"?:string|undefined,range?:string|undefined,referer?:string|undefined,"retry-after"?:string|undefined,"sec-websocket-accept"?:string|undefined,"sec-websocket-extensions"?:string|undefined,"sec-websocket-key"?:string|undefined,"sec-websocket-protocol"?:string|undefined,"sec-websocket-version"?:string|undefined,"set-cookie"?:string[]|undefined,"strict-transport-security"?:string|undefined,tk?:string|undefined,trailer?:string|undefined,"transfer-encoding"?:string|undefined,upgrade?:string|undefined,"user-agent"?:string|undefined;vary?:string|undefined,via?:string|undefined,warning?:string|undefined,"www-authenticate"?:string|undefined},body:{responseContext:{visitorData:string,serviceTrackingParams:{service:string,params:{key:string,value:string}[]}[],mainAppWebResponseContext:{loggedOut:boolean,trackingParam:string},webResponseContextExtensionData:{hasDecorated:boolean}},estimatedResults:string,contents:{twoColumnSearchResultsRenderer:{primaryContents:{sectionListRenderer:{contents:{itemSectionRenderer:{contents:{showingResultsForRenderer?:{showingResultsFor:{runs:{text:string}[]},correctedQuery:{runs:{text:string,italics:boolean}[]},correctedQueryEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},searchEndpoint:{query:string}},searchInsteadFor:{runs:{text:string}[]},originalQuery:{simpleText:string},originalQueryEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},searchEndpoint:{query:string,params:string}},trackingParams:string},videoRenderer?:{videoId:string,thumbnail:{thumbnails:{url:string,width:number,height:number}[]},title:{runs:{text:string}[],accessibility:{accessibilityData:{label:string}}},longBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},publishedTimeText:{simpleText:string},lengthText:{accessibility:{accessibilityData:{label:string}},simpleText:string},viewCountText:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,params:string,playerParams:string,watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},badges:{metadataBadgeRenderer:{style:string,label:string,trackingParams:string,accessibilityData:{label:string}}}[],ownerBadges:{metadataBadgeRenderer:{icon:{iconType:string},style:string,tooltip:string,trackingParams:string,accessibilityData:{label:string}}}[],ownerText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},shortBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},trackingParams:string,showActionMenu:boolean,shortViewCountText:{accessibility:{accessibilityData:{label:string}},simpleText:string},menu:{menuRenderer:{items:{menuServiceItemRenderer:{text:{runs:{text:string}[]},icon:{iconType:string},serviceEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,addToPlaylistCommand:{openMiniplayer:boolean,videoId:string,listType:string,onCreateListCommand:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean,apiUrl:string}},createPlaylistServiceEndpoint:{videoIds:string[],params:string}},videoIds:string[]}}[]}},trackingParams:string}}[],trackingParams:string,accessibility:{accessibilityData:{label:string}}}},channelThumbnailSupportedRenderers:{channelThumbnailWithLinkRenderer:{thumbnail:{thumbnails:{url:string,width:number,height:number}[]},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string}},accessibility:{accessibilityData:{label:string}}}},thumbnailOverlays:{thumbnailOverlayTimeStatusRenderer:{text:{accessibility:{accessibilityData:{label:string}},simpleText:string},style:string}}[],richThumbnail:{movingThumbnailRenderer:{movingThumbnailDetails:{thumbnails:{url:string,width:number,height:number}[],logAsMovingThumbnail:boolean},enableHoveredLogging:boolean,enableOverlay:boolean}},detailedMetadataSnippets:{snippetText:{runs:{text:string}[]},snippetHoverText:{runs:{text:string}[]},maxOneLine:boolean}[],inlinePlaybackEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,params:string,playerParams:string,playerExtraUrlParams:{key:string,value:string}[],watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},searchVideoResultEntityKey:string},channelRenderer?:{channelId:string,title:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}},thumbnail:{thumbnails:{url:string,width:number,height:number}[]},shortBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},videoCountText:{accessibility:{accessibilityData:{label:string}},simpleText:string},subscriptionButton:{subscribed:boolean},ownerBadges:{metadataBadgeRenderer:{icon:{iconType:string},style:string,tooltip:string,trackingParams:string,accessibilityData:{label:string}}}[],subscriberCountText:{simpleText:string},subscribeButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,text:{runs:{text:string}[]},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},signInEndpoint:{nextEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},searchEndpoint:{query:string}},continueAction:string}},trackingParams:string}},trackingParams:string,longBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]}},playlistRenderer?:{playlistId:string,title:{simpleText:string},thumbnails:{thumbnails:{url:string,width:number,height:number}[]}[],videoCount:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,playlistId:string,params:string,loggingContext:{vssLoggingContext:{serializedContextData:string}},watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},viewPlaylistText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string}}}[]},shortBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},videos:{childVideoRenderer:{title:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},watchEndpoint:{videoId:string,playlistId:string,loggingContext:{vssLoggingContext:{serializedContextData:string}},watchEndpointSupportedOnesieConfig:{html5PlaybackOnesieConfig:{commonConfig:{url:string}}}}},lengthText:{accessibility:{accessibilityData:{label:string}},simpleText:string},videoId:string}}[],videoCountText:{runs:{text:string}[]},trackingParams:string,thumbnailText:{runs:{text:string,bold:boolean}[]},longBylineText:{runs:{text:string,navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string,canonicalBaseUrl:string}}}[]},thumbnailRenderer:{playlistVideoThumbnailRenderer:{thumbnail:{thumbnails:{url:string,width:number,height:number}[],sampledThumbnailColor:{red:number,green:number,blue:number},darkColorPalette:{section2Color:number,iconInactiveColor:number},vibrantColorPalette:{iconInactiveColor:number}},trackingParams:string}},thumbnailOverlays:{thumbnailOverlayBottomPanelRenderer:{text:{simpleText:string},icon:{iconType:string}}}[]}}[],trackingParams:string}}[],trackingParams:string,subMenu:{searchSubMenuRenderer:{trackingParams:string}},hideBottomSeparator:boolean,targetId:string}}}},trackingParams:string,header:{searchHeaderRenderer:{chipBar:{chipCloudRenderer:{chips:{chipCloudChipRenderer:{style:{styleType:string},text:{simpleText:string},trackingParams:string,isSelected:boolean,location:string}}[],trackingParams:string,nextButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,icon:{iconType:string},accessibility:{label:string},trackingParams:string}},previousButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,icon:{iconType:string},accessibility:{label:string},trackingParams:string}},loggingDirectives:{trackingParams:string,visibility:{types:string},enableDisplayloggerExperiment:boolean}}},searchFilterButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,text:{runs:{text:string}[]},icon:{iconType:string},tooltip:string,trackingParams:string,accessibilityData:{accessibilityData:{label:string}},command:{clickTrackingParams:string,openPopupAction:{popup:{searchFilterOptionsDialogRenderer:{title:{runs:{text:string}[]},groups:{searchFilterGroupRenderer:{title:{simpleText:string},filters:{searchFilterRenderer:{label:{simpleText:string},navigationEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},searchEndpoint:{query:string,params:string}},tooltip:string,trackingParams:string}}[],trackingParams:string}}[]}},popupType:string}},iconPosition:string}},trackingParams:string}},topbar:{desktopTopbarRenderer:{logo:{topbarLogoRenderer:{iconImage:{iconType:string},tooltipText:{runs:{text:string}[]},endpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number,apiUrl:string}},browseEndpoint:{browseId:string}},trackingParams:string,overrideEntityKey:string}},searchbox:{fusionSearchboxRenderer:{icon:{iconType:string},placeholderText:{runs:{text:string}[]},config:{webSearchboxConfig:{requestLanguage:string,requestDomain:string,hasOnscreenKeyboard:boolean,focusSearchbox:boolean}},trackingParams:string,searchEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{url:string,webPageType:string,rootVe:number}},searchEndpoint:{query:string}},clearButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,icon:{iconType:string},trackingParams:string,accessibilityData:{accessibilityData:{label:string}}}}}},trackingParams:string,topbarButtons:{topbarMenuButtonRenderer:{icon:{iconType:string},menuRequest:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean,apiUrl:string}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,openPopupAction:{popup:{multiPageMenuRenderer:{trackingParams:string,style:string,showLoadingSpinner:boolean}},popupType:string,beReused:boolean}}[]}},trackingParams:string,accessibility:{accessibilityData:{label:string}},tooltip:string,style:string}}[],hotkeyDialog:{hotkeyDialogRenderer:{title:{runs:{text:string}[]},sections:{hotkeyDialogSectionRenderer:{title:{runs:{text:string}[]},options:{hotkeyDialogSectionOptionRenderer:{label:{runs:{text:string}[]},hotkey:string}}[]}}[],dismissButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,text:{runs:{text:string}[]},trackingParams:string}},trackingParams:string}},backButton:{buttonRenderer:{trackingParams:string,command:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,signalAction:{signal:string}}[]}}}},forwardButton:{buttonRenderer:{trackingParams:string,command:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,signalAction:{signal:string}}[]}}}},a11ySkipNavigationButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,text:{runs:{text:string}[]},trackingParams:string,command:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,signalAction:{signal:string}}[]}}}},voiceSearchButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,serviceEndpoint:{clickTrackingParams:string,commandMetadata:{webCommandMetadata:{sendPost:boolean}},signalServiceEndpoint:{signal:string,actions:{clickTrackingParams:string,openPopupAction:{popup:{voiceSearchDialogRenderer:{placeholderHeader:{runs:{text:string}[]},promptHeader:{runs:{text:string}[]},exampleQuery1:{runs:{text:string}[]},exampleQuery2:{runs:{text:string}[]},promptMicrophoneLabel:{runs:{text:string}[]},loadingHeader:{runs:{text:string}[]},connectionErrorHeader:{runs:{text:string}[]},connectionErrorMicrophoneLabel:{runs:{text:string}[]},permissionsHeader:{runs:{text:string}[]},permissionsSubtext:{runs:{text:string}[]},disabledHeader:{runs:{text:string}[]},disabledSubtext:{runs:{text:string}[]},microphoneButtonAriaLabel:{runs:{text:string}[]},exitButton:{buttonRenderer:{style:string,size:string,isDisabled:boolean,icon:{iconType:string},trackingParams:string,accessibilityData:{accessibilityData:{label:string}}}},trackingParams:string,microphoneOffPromptHeader:{runs:{text:string}[]}}},popupType:string}}[]}},icon:{iconType:string},tooltip:string,trackingParams:string,accessibilityData:{accessibilityData:{label:string}}}}}},refinements:string[],targetId:string}}} response 
     */
    constructor(response) {
        this.kind = "youtube#searchListResponse";
        this.etag = response.headers.etag;
        // this.nextPageToken = response.body.contents ? response.body.contents.twoColumnSearchResultsRenderer.primaryContents.sectionListRenderer.contents[1].continuationItemRenderer.continuationEndpoint.continuationCommand.token : response.body.onResponseReceivedCommands[0].appendContinuationItemsAction.continuationItems[1].continuationItemRenderer.continuationEndpoint.continuationCommand.token;
        this.pageInfo = {
            totalResults: response.body.estimatedResults
        }
        this.items = ((contents) => {
            const arr = [];
            for (var searchResult of contents) {
                if (searchResult.videoRenderer || searchResult.channelRenderer || searchResult.playlistRenderer) {
                    arr.push(new SearchResult(searchResult, this.etag));
                }
            }
            return arr;
        })(response.body.contents ? response.body.contents.twoColumnSearchResultsRenderer.primaryContents.sectionListRenderer.contents[0].itemSectionRenderer.contents : response.body.onResponseReceivedCommands ? response.body.onResponseReceivedCommands[0].appendContinuationItemsAction.continuationItems[0].itemSectionRenderer.contents : []);
    }
}

export async function list(options) {
    return new SearchListResponse(await requestAPI("search", {
        query: options.q,
        continuation: options.pageToken
    }));
}