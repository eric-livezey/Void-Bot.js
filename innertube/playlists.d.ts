import { IncomingHttpHeaders } from "http";

export class Playlist {
    /**
     * Identifies the API resource's type. The value will be `youtube#playlist`.
     */
    kind: "youtube#playlist";
    etag: string;
    id: string;
    snippet: {
        publishedAt: Date,
        channelId: string,
        title: string,
        description: string,
        thumbnails: {
            [key: string]: {
                url: string,
                width: number,
                height: number
            }
        },
        channelTitle: string,
        defaultLanguage: string,
        localized: {
            title: string,
            description: string
        }
    };
    status: {
        privacyStatus: string
    };
    contentDetails: {
        itemCount: number
    };
    player: {
        embedHtml: string
    };
    localizations: {
        [key: string]: {
            title: string,
            description: string
        }
    };

    constructor(response: { statusCode: number, statusMessage: string, headers: IncomingHttpHeaders, body: { responseContext: { visitorData: string, serviceTrackingParams: { service: string, params: { key: string, value: string }[] }[], mainAppWebResponseContext: { loggedOut: boolean, trackingParam: string }, webResponseContextExtensionData: { hasDecorated: boolean } }, contents: { twoColumnBrowseResultsRenderer: { tabs: { tabRenderer: { selected: boolean, content: { sectionListRenderer: { contents: { itemSectionRenderer: { contents: { playlistVideoListRenderer: { contents: { playlistVideoRenderer?: { videoId: string, thumbnail: { thumbnails: { url: string, width: number, height: number }[] }, title: { runs: { text: string }[], accessibility: { accessibilityData: { label: string } } }, index: { simpleText: string }, shortBylineText: { runs: { text: string, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, canonicalBaseUrl: string } } }[] }, lengthText: { accessibility: { accessibilityData: { label: string } }, simpleText: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, watchEndpoint: { videoId: string, playlistId: string, index: number, params: string, playerParams: string, loggingContext: { vssLoggingContext: { serializedContextData: string } }, watchEndpointSupportedOnesieConfig: { html5PlaybackOnesieConfig: { commonConfig: { url: string } } } } }, lengthSeconds: string, trackingParams: string, isPlayable: boolean, menu: { menuRenderer: { items: { menuServiceItemRenderer: { text: { runs: { text: string }[] }, icon: { iconType: string }, serviceEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean } }, signalServiceEndpoint: { signal: string, actions: { clickTrackingParams: string, addToPlaylistCommand: { openMiniplayer: boolean, videoId: string, listType: string, onCreateListCommand: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean, apiUrl: string } }, createPlaylistServiceEndpoint: { videoIds: string[], params: string } }, videoIds: string[] } }[] } }, trackingParams: string } }[], trackingParams: string, accessibility: { accessibilityData: { label: string } } } }, thumbnailOverlays: { thumbnailOverlayTimeStatusRenderer: { text: { accessibility: { accessibilityData: { label: string } }, simpleText: string }, style: string } }[], videoInfo: { runs: { text: string }[] } }, continuationItemRenderer?: { trigger: string, continuationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean, apiUrl: string } }, continuationCommand: { token: string, request: string } } } }[], playlistId: string, isEditable: boolean, canReorder: boolean, trackingParams: string, targetId: string } }[], trackingParams: string } }[], trackingParams: string } }, trackingParams: string } }[] } }, header: { playlistHeaderRenderer: { playlistId: string, title: { simpleText: string }, numVideosText: { runs: { text: string }[] }, descriptionText: {}, ownerText: { runs: { text: string, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, canonicalBaseUrl: string } } }[] }, viewCountText: { simpleText: string }, shareData: { canShare: boolean }, isEditable: boolean, privacy: string, ownerEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, canonicalBaseUrl: string } }, editableDetails: { canDelete: boolean }, trackingParams: string, serviceEndpoints: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean, apiUrl: string } }, playlistEditEndpoint: { actions: { action: string, sourcePlaylistId: string }[] } }[], stats: { runs: { text: string }[] }[], briefStats: { runs: { text: string }[] }[], playlistHeaderBanner: { heroPlaylistThumbnailRenderer: { thumbnail: { thumbnails: { url: string, width: number, height: number }[] }, maxRatio: number, trackingParams: string, onTap: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, watchEndpoint: { videoId: string, playlistId: string, playerParams: string, loggingContext: { vssLoggingContext: { serializedContextData: string } }, watchEndpointSupportedOnesieConfig: { html5PlaybackOnesieConfig: { commonConfig: { url: string } } } } }, thumbnailOverlays: { thumbnailOverlayHoverTextRenderer: { text: { simpleText: string }, icon: { iconType: string } } } } }, saveButton: { toggleButtonRenderer: { style: { styleType: string }, size: { sizeType: string }, isToggled: boolean, isDisabled: boolean, defaultIcon: { iconType: string }, toggledIcon: { iconType: string }, trackingParams: string, defaultTooltip: string, toggledTooltip: string, toggledStyle: { styleType: string }, defaultNavigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { ignoreNavigation: boolean } }, modalEndpoint: { modal: { modalWithTitleAndButtonRenderer: { title: { simpleText: string }, content: { simpleText: string }, button: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { simpleText: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, signInEndpoint: { nextEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string } }, idamTag: string } }, trackingParams: string } } } } } }, accessibilityData: { accessibilityData: { label: string } }, toggledAccessibilityData: { accessibilityData: { label: string } } } }, shareButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, serviceEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean, apiUrl: string } }, shareEntityServiceEndpoint: { serializedShareEntity: string, commands: { clickTrackingParams: string, openPopupAction: { popup: { unifiedSharePanelRenderer: { trackingParams: string, showLoadingSpinner: boolean } }, popupType: string, beReused: boolean } }[] } }, icon: { iconType: string }, tooltip: string, trackingParams: string, accessibilityData: { accessibilityData: { label: string } } } }, moreActionsMenu: { menuRenderer: { items: { menuNavigationItemRenderer: { text: { simpleText: string }, icon: { iconType: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, params: string, nofollow: boolean, navigationType: string } }, trackingParams: string } }[], trackingParams: string, accessibility: { accessibilityData: { label: string } }, targetId: string } }, playButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { simpleText: string }, icon: { iconType: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, watchEndpoint: { videoId: string, playlistId: string, playerParams: string, loggingContext: { vssLoggingContext: { serializedContextData: string } }, watchEndpointSupportedOnesieConfig: { html5PlaybackOnesieConfig: { commonConfig: { url: string } } } } }, trackingParams: string } }, shufflePlayButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { simpleText: string }, icon: { iconType: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, watchEndpoint: { videoId: string, playlistId: string, params: string, playerParams: string, loggingContext: { vssLoggingContext: { serializedContextData: string } }, watchEndpointSupportedOnesieConfig: { html5PlaybackOnesieConfig: { commonConfig: { url: string } } } } }, trackingParams: string } }, onDescriptionTap: { clickTrackingParams: string, openPopupAction: { popup: { fancyDismissibleDialogRenderer: { dialogMessage: {}, title: { runs: { text: string }[] }, confirmLabel: { runs: { text: string }[] }, trackingParams: string } }, popupType: string } }, cinematicContainer: { cinematicContainerRenderer: { backgroundImageConfig: { thumbnail: { thumbnails: { url: string, width: number, height: number }[] } }, gradientColorConfig: { lightThemeColor: number, darkThemeColor: number, startLocation: number }[], config: { lightThemeBackgroundColor: number, darkThemeBackgroundColor: number, colorSourceSizeMultiplier: number, applyClientImageBlur: boolean } } }, byline: { playlistBylineRenderer: { text: { runs: { text: string }[] } } }[], descriptionTapText: { runs: { text: string }[] } } }, alerts: { alertWithButtonRenderer: { type: string, text: { simpleText: string }, dismissButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, icon: { iconType: string }, trackingParams: string, accessibilityData: { accessibilityData: { label: string } } } } } }[], metadata: { playlistMetadataRenderer: { title: string, androidAppindexingLink: string, iosAppindexingLink: string } }, trackingParams: string, topbar: { desktopTopbarRenderer: { logo: { topbarLogoRenderer: { iconImage: { iconType: string }, tooltipText: { runs: { text: string }[] }, endpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string } }, trackingParams: string, overrideEntityKey: string } }, searchbox: { fusionSearchboxRenderer: { icon: { iconType: string }, placeholderText: { runs: { text: string }[] }, config: { webSearchboxConfig: { requestLanguage: string, requestDomain: string, hasOnscreenKeyboard: boolean, focusSearchbox: boolean } }, trackingParams: string, searchEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, searchEndpoint: { query: string } }, clearButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, icon: { iconType: string }, trackingParams: string, accessibilityData: { accessibilityData: { label: string } } } } } }, trackingParams: string, topbarButtons: { topbarMenuButtonRenderer: { icon: { iconType: string }, menuRequest: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean, apiUrl: string } }, signalServiceEndpoint: { signal: string, actions: { clickTrackingParams: string, openPopupAction: { popup: { multiPageMenuRenderer: { trackingParams: string, style: string, showLoadingSpinner: boolean } }, popupType: string, beReused: boolean } }[] } }, trackingParams: string, accessibility: { accessibilityData: { label: string } }, tooltip: string, style: string } }[], hotkeyDialog: { hotkeyDialogRenderer: { title: { runs: { text: string }[] }, sections: { hotkeyDialogSectionRenderer: { title: { runs: { text: string }[] }, options: { hotkeyDialogSectionOptionRenderer: { label: { runs: { text: string }[] }, hotkey: string } }[] } }[], dismissButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { runs: { text: string }[] }, trackingParams: string } }, trackingParams: string } }, backButton: { buttonRenderer: { trackingParams: string, command: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean } }, signalServiceEndpoint: { signal: string, actions: { clickTrackingParams: string, signalAction: { signal: string } }[] } } } }, forwardButton: { buttonRenderer: { trackingParams: string, command: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean } }, signalServiceEndpoint: { signal: string, actions: { clickTrackingParams: string, signalAction: { signal: string } }[] } } } }, a11ySkipNavigationButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { runs: { text: string }[] }, trackingParams: string, command: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean } }, signalServiceEndpoint: { signal: string, actions: { clickTrackingParams: string, signalAction: { signal: string } }[] } } } }, voiceSearchButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, serviceEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { sendPost: boolean } }, signalServiceEndpoint: { signal: string, actions: { clickTrackingParams: string, openPopupAction: { popup: { voiceSearchDialogRenderer: { placeholderHeader: { runs: { text: string }[] }, promptHeader: { runs: { text: string }[] }, exampleQuery1: { runs: { text: string }[] }, exampleQuery2: { runs: { text: string }[] }, promptMicrophoneLabel: { runs: { text: string }[] }, loadingHeader: { runs: { text: string }[] }, connectionErrorHeader: { runs: { text: string }[] }, connectionErrorMicrophoneLabel: { runs: { text: string }[] }, permissionsHeader: { runs: { text: string }[] }, permissionsSubtext: { runs: { text: string }[] }, disabledHeader: { runs: { text: string }[] }, disabledSubtext: { runs: { text: string }[] }, microphoneButtonAriaLabel: { runs: { text: string }[] }, exitButton: { buttonRenderer: { style: string, size: string, isDisabled: boolean, icon: { iconType: string }, trackingParams: string, accessibilityData: { accessibilityData: { label: string } } } }, trackingParams: string, microphoneOffPromptHeader: { runs: { text: string }[] } } }, popupType: string } }[] } }, icon: { iconType: string }, tooltip: string, trackingParams: string, accessibilityData: { accessibilityData: { label: string } } } } } }, microformat: { microformatDataRenderer: { urlCanonical: string, title: string, description: string, thumbnail: { thumbnails: { url: string, width: number, height: number }[] }, siteName: string, appName: string, androidPackage: string, iosAppStoreId: string, iosAppArguments: string, ogType: string, urlApplinksWeb: string, urlApplinksIos: string, urlApplinksAndroid: string, urlTwitterIos: string, urlTwitterAndroid: string, twitterCardType: string, twitterSiteHandle: string, schemaDotOrgType: string, noindex: boolean, unlisted: boolean, linkAlternates: { hrefUrl: string }[] } }, sidebar: { playlistSidebarRenderer: { items: { playlistSidebarPrimaryInfoRenderer?: { thumbnailRenderer: { playlistVideoThumbnailRenderer: { thumbnail: { thumbnails: { url: string, width: number, height: number }[] }, trackingParams: string } }, title: { runs: { text: string, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, watchEndpoint: { videoId: string, playlistId: string, playerParams: string, loggingContext: { vssLoggingContext: { serializedContextData: string } }, watchEndpointSupportedOnesieConfig: { html5PlaybackOnesieConfig: { commonConfig: { url: string } } } } } }[] }, stats: { runs: { text: string }[] }[], menu: { menuRenderer: { items: { menuNavigationItemRenderer: { text: { simpleText: string }, icon: { iconType: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, params: string, nofollow: boolean, navigationType: string } }, trackingParams: string } }[], trackingParams: string, topLevelButtons: { toggleButtonRenderer: { style: { styleType: string }, size: { sizeType: string }, isToggled: boolean, isDisabled: boolean, defaultIcon: { iconType: string }, toggledIcon: { iconType: string }, trackingParams: string, defaultTooltip: string, toggledTooltip: string, defaultNavigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { ignoreNavigation: boolean } }, modalEndpoint: { modal: { modalWithTitleAndButtonRenderer: { title: { simpleText: string }, content: { simpleText: string }, button: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { simpleText: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, signInEndpoint: { nextEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string } }, idamTag: string } }, trackingParams: string } } } } } }, accessibilityData: { accessibilityData: { label: string } }, toggledAccessibilityData: { accessibilityData: { label: string } } } }[], accessibility: { accessibilityData: { label: string } }, targetId: string } }, thumbnailOverlays: { thumbnailOverlaySidePanelRenderer: { text: { simpleText: string }, icon: { iconType: string } } }[], navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, watchEndpoint: { videoId: string, playlistId: string, playerParams: string, loggingContext: { vssLoggingContext: { serializedContextData: string } }, watchEndpointSupportedOnesieConfig: { html5PlaybackOnesieConfig: { commonConfig: { url: string } } } } }, badges: { metadataBadgeRenderer: { icon: { iconType: string }, style: string, label: string, trackingParams: string } }[], description: {}, showMoreText: { runs: { text: string }[] } }, playlistSidebarSecondaryInfoRenderer?: { videoOwner: { videoOwnerRenderer: { thumbnail: { thumbnails: { url: string, width: number, height: number }[] }, title: { runs: { text: string, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, canonicalBaseUrl: string } } }[] }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string, canonicalBaseUrl: string } }, trackingParams: string } }, button: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { runs: { text: string }[] }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { ignoreNavigation: boolean } }, modalEndpoint: { modal: { modalWithTitleAndButtonRenderer: { title: { simpleText: string }, content: { simpleText: string }, button: { buttonRenderer: { style: string, size: string, isDisabled: boolean, text: { simpleText: string }, navigationEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number } }, signInEndpoint: { nextEndpoint: { clickTrackingParams: string, commandMetadata: { webCommandMetadata: { url: string, webPageType: string, rootVe: number, apiUrl: string } }, browseEndpoint: { browseId: string } }, continueAction: string, idamTag: string } }, trackingParams: string } } } } } }, trackingParams: string } } } }[], trackingParams: string } } } });

    listItems(): Promise<PlaylistItem[]>;
}

export class PlaylistItem {
    /**
     * Identifies the API resource's type. The value will be `youtube#playlistItem`.
     */
    kind: "youtube#playlistItem";
    etag: string;
    id: string;
    snippet: {
        publishedAt: Date,
        channelId: string,
        title: string,
        description: string,
        thumbnails: {
            [key: string]: {
                url: string,
                width: number,
                height: number
            }
        };
        channelTitle: string,
        videoOwnerChannelTitle: string,
        videoOwnerChannelId: string,
        playlistId: string,
        position: number,
        resourceId: {
            kind: string,
            videoId: string,
        }
    };
    contentDetails: {
        videoId: string,
        startAt: string,
        endAt: string,
        note: string,
        videoPublishedAt: Date
    };
    status: {
        privacyStatus: string
    };
}

export function get(id: string): Promise<Playlist | "ERROR">;